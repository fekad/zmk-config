#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define BASE     0
#define SYM      1
#define NUM      2
#define NAV      3
#define SET      4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt {
	quick_tap_ms = <200>;
};


&mt {
	tapping-term-ms = <400>;
};

&sl {
    release-after-ms = <2000>;
};

&mmv {
    time-to-max-speed-ms = <50>;
};

&mwh {
    acceleration-exponent=<1>;
};


/ {
    behaviors {
        lhm: left_hand_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "left hand homerow mods";
            #binding-cells = <2>;
            tapping-term-ms = <1000>;
            // quick-tap-ms = <0>;
            flavor = "tap-unless-interrupted";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <
			     5  6  7  8  9
				15 16 17 18 19
				25 26 27 28 29
				33 34 35
			>;    // <---[[right-hand keys]]
        };
        rhm: right_hand_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "right hand homerow mods";
            #binding-cells = <2>;
            tapping-term-ms = <1000>;
            // quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <
				 0  1  2  3  4
				10 11 12 13 14
				20 21 22 23 24
				      30 31 32
			>;    // <---[[left-hand keys]]
        };
    };

	keymap {
		compatible = "zmk,keymap";

		// This is a simple colemak dh layout
		// -------------------------------------------------------------------------------------
		// |   Q   |   W   |   F   |   P   |   B   |   |   J   |   L   |   U   |   Y   |   ;:  |
		// |   A   |   R   |   S   |   T   |   G   |   |   M   |   N   |   E   |   I   |   O   |
		// |   Z   |   X   |   C   |   D   |   V   |   |   K   |   H   |   ,<  |   .>  |   /?  |
		//                 |       |  TAB  |  SPC  |   |  BSPC |  ENT  |  SYM  |
		// base_layer {
		// 	bindings = <
		// 		&kp Q        &kp W        &kp F        &kp P        &kp B               &kp J        &kp L        &kp U        &kp Y        &kp SEMI
		// 		&lhm LCTRL A &lhm LALT R  &lhm LCMD S  &lhm LSHFT T &kp G               &kp M        &rhm RSHFT N &rhm RCMD E  &rhm RALT I  &rhm RCTRL O
		// 		&kp Z        &kp X        &kp C        &kp D        &kp V               &kp K        &kp H        &kp COMMA    &kp DOT      &kp SLASH
		// 		                          &mo NAV      &kp TAB      &mt LG(SPACE) SPACE &kp BSPC     &kp ENTER    &sl SYM
		// 	>;
		// };

		// This is a simple qwerty layout
		// -------------------------------------------------------------------------------------
		// |   Q   |   W   |   E   |   R   |   T   |   |   Y   |   U   |   I   |   O   |   P   |
		// |   A   |   S   |   D   |   F   |   G   |   |   H   |   J   |   K   |   L   |   ;:  |
		// |   Z   |   X   |   C   |   V   |   B   |   |   N   |   M   |   ,<  |   . > |   /?  |
		//                 |       |  TAB  |  SPC  |   |  BSPC |  ENT  |  SYM  |
		base_layer {
			bindings = <
				&kp Q        &kp W        &kp E        &kp R        &kp T               &kp Y        &kp U        &kp I        &kp O        &kp P
				&lhm LCTRL A &lhm LALT S  &lhm LCMD D  &lhm LSHFT F &kp G               &kp H        &rhm RSHFT J &rhm RCMD K  &rhm RALT L  &rhm RCTRL SEMI
				&kp Z        &kp X        &kp C        &kp V        &kp B               &kp N        &kp M        &kp COMMA    &kp DOT      &kp SLASH
		 		                          &mo NAV      &kp TAB      &mt LG(SPACE) SPACE &kp BSPC     &kp ENTER    &sl SYM
			>;
		};


		// ?! ., :; +- <> () [] {}
  		// ! ± §
		// -------------------------------------------------------------------------------------
		// |  ESC  |   @   |   #   |   $   |   %   |   |   ^   |   &   |   *   |   !   |  BSPC |
		// |  TAB  |   =   |   _   |   '   |   :   |   |   \   |   (   |   )   |   |   | ENTER |
		// |   `   |   +   |   -   |   "   |   ~   |   |   {   |   [   |   ]   |   }   |  NAV  |
		//                 |  BASE |  TAB  | SPACE |   |  BSPC | ENTER |  NUM  |
		symbol_layer {
			bindings = <
				&kp ESC        &kp LS(N2)      &kp LS(N3)       &kp LS(N4)     &kp LS(N5)          &kp LS(N6)   &kp LS(N7)      &kp LS(N8)      &kp EXCL        &kp BSPC
				&lhm LCTRL TAB &lhm LALT EQUAL &lhm LCMD UNDER  &lhm LSHFT SQT &kp COLON           &kp BSLH     &rhm RSHFT LPAR &rhm RSHFT RPAR &rhm RSHFT PIPE &rhm RSHFT ENTER
				&kp GRAVE      &kp PLUS        &kp MINUS        &kp DQT        &kp TILDE           &kp LBRC     &kp LBKT        &kp RBKT        &kp RBRC        &to NAV
		 		                               &to BASE         &kp TAB        &mt LG(SPACE) SPACE &kp BSPC     &kp ENTER       &to NUM
			>;
		};

		// -------------------------------------------------------------------------------------
		// |  ESC  |       | BR-   |  BR+  |   _   |   |   -   |   7   |   8   |   9   |   /   |
		// |  TAB  |       | VOL-  | VOL+  |   +   |   |   =   |   4   |   5   |   6   |   *   |
		// |  SET  | PREV  | PLAY  | NEXT  |   .   |   |   0   |   1   |   2   |   3   |       |
		//                 | BASE  |  TAB  | SPACE |   |  BSPC | ENTER |       |
		number_layer {
			bindings = <
				&kp ESC      &none        &kp C_BRI_DN &kp C_BRI_UP &kp UNDER       &kp MINUS    &kp N7       &kp N8       &kp N9       &kp SLASH
			    &kp TAB      &none        &kp C_VOL_DN &kp C_VOL_UP &kp PLUS        &kp EQUAL    &kp N4       &kp N5       &kp N6       &kp STAR
			    &to SET      &kp C_PREV   &kp C_PP     &kp C_NEXT   &kp DOT         &kp N0       &kp N1       &kp N2       &kp N3       &none
				                          &to BASE     &kp TAB      &kp SPACE       &kp BSPC     &kp ENTER    &none
			>;
		};


		// cut copy paste
		// -----------------------------------------------------------------
		// |  ESC  |       |       |       |       |   | HOME  | PGUP  |  UP   | PGDN  |       |
		// |  TAB  |       |       |       |       |   |  END  | LEFT  | DOWN  | RIGHT |       |
		// |  SET  |       |       |       |       |   |       |       |       |       |       |
		//                 | BASE  |  TAB  | SPACE |   |  BSPC | ENTER |       |
		navigation_layer {
			bindings = <
				&none        &mwh SCROLL_UP &mmv MOVE_UP   &mwh SCROLL_DOWN &none           &kp HOME     &kp PG_UP    &kp UP       &kp PG_DN    &none
			    &none        &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT  &none           &kp END      &kp LEFT     &kp DOWN     &kp RIGHT    &none
			    &to SET      &mkp RCLK      &mkp MCLK      &mkp RCLK        &none           &none        &none        &none        &none        &none
				                            &to BASE       &kp TAB          &kp SPACE       &kp BSPC     &kp ENTER    &none
		>;
		};

		// -------------------------------------------------------------------------------------
		// |OUT_BLE|OUT_USB|       |       | BTCLR |   |       |  F7   |  F8   |  F9   |  F12  |
		// |  BT1  |  BT2  |  BT3  |  BT4  |       |   |       |  F4   |  F5   |  F6   |  F11  |
		// |       |       |       |       |       |   |       |  F1   |  F2   |  F3   |  F10  |
		//                 | BASE  |  TAB  | SPACE |   |  BSPC | ENTER |       |
		setting_layer {
			bindings = <
				&out OUT_BLE &out OUT_USB &none        &none        &bt BT_CLR      &none        &kp F7       &kp F8       &kp F9      &kp F12
			    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &none           &none        &kp F4       &kp F5       &kp F6      &kp F11
			    &none        &none        &none        &none        &none           &none        &kp F1       &kp F2       &kp F3      &kp F10
				                          &to BASE     &kp TAB      &kp SPACE       &kp BSPC     &kp ENTER    &none
		>;
		};



	};
};

//http://xahlee.info/comp/computer_language_char_distribution.html

// -------------------------------------------------------------------------------------
// |   !   |   @   |   #   |   $   |   %   |   |   /   |   7   |   8   |   9   |   -   |
// |   \   |   |   |   {   |   (   |   [   |   |   *   |   4   |   5   |   6   |   +   |
// |   ^   |   &   |   }   |   )   |   ]   |   |   0   |   1   |   2   |   3   |   =   |
//                 |  BSPC |  L1   | SHIFT |   |  ALT  |  L4   | ENTER |



// home row mod
// | SUPER |  ALT  |  CTRL | SHIFT |       |   |       | SHIFT |  CTRL |  ALT  | SUPER |


// This is a simple colemak dh layout
// -------------------------------------------------------------------------------------
// |   Q   |   W   |   F   |   P   |   B   |   |   J   |   L   |   U   |   Y   |   ;:  |
// |   A   |   R   |   S   |   T   |   G   |   |   M   |   N   |   E   |   I   |   O   |
// |   Z   |   X   |   C   |   D   |   V   |   |   K   |   H   |   ,<  |   .>  |   /?  |
//                 |  GUI  |  LWR  |  SPC  |   |  ENT  |  RSE  |  ALT  |
//base_layer {
//	bindings = <
//		&kp Q       &kp W       &kp F        &kp P        &kp B        &kp J     &kp L        &kp U        &kp Y       &kp SEMI
//		&lhm LGUI A &lhm LALT R &lhm LCTRL S &lhm LSHFT T &kp G        &kp M     &rhm RSHFT N &rhm RCTRL E &rhm RALT I &rhm RGUI O
//		&kp Z       &kp X       &kp C        &kp D        &kp V        &kp K     &kp H        &kp COMMA    &kp DOT     &kp SLASH
//								&kp TAB      &kp TAB      &kp BSPC     &kp SPACE &kp ENTER    &to SYM
//	>;
//};



// colmak_dh
// -------------------------------------------------------------------------------------
// |   Q   |   W   |   F   |   P   |   B   |   |   J   |   L   |   U   |   Y   |   '"  |
// |   A   |   R   |   S   |   T   |   G   |   |   M   |   N   |   E   |   I   |   O   |
// |   Z   |   X   |   C   |   D   |   V   |   |   K   |   H   |   ,<  |   .>  |   /?  |
//                 |  BSPC | SPACE | SHIFT |   | CTRL  |   L2  | ENTER |

// - missing pairs: -_ =+ [{ ]} \| ;: `~



// https://github.com/manna-harbour/miryoku_zmk
// https://github.com/weteor/3W6/tree/main/dev/keymap
// https://www.youtube.com/watch?v=S0bBmcoVsm8
// https://configure.zsa.io/moonlander/layouts/daEvx/v96pr/0


// Ben Vallack
// L1
// -------------------------------------------------------------------------------------
// |   Q   |   W   |   F   |   P   |   B   |   |   J   |   L   |   U   |   Y   |   ;   |
// |   A   |   R   |   S   |   T   |   G   |   |   M   |   N   |   E   |   I   |   O   |
// |   Z   |   X   |   C   |   D   |   V   |   |   K   |   H   |   ,   |   .   |   /   |
//                 |       | SPACE | SHIFT |   | CTRL  |   L2  |       |

// L2
// -------------------------------------------------------------------------------------
// |  ESC  |   @   |   #   |   $   |   %   |   |   ^   |   &   |   *   |   ;   |  BSPC |
// |  TAB  |   =   |       |   '   |       |   |   \   |   {   |   }   |   |   | ENTER |
// |   ~   |   £   |       |   "   |       |   |   [   |   (   |   )   |   ]   |  L3   |
//                 |       |   L1  | SHIFT |   |  ALT  |  L4   |       |

// L3
// -------------------------------------------------------------------------------------
// |  ESC  | MSCR  |  MUP  | MSCL  |   Q   |   |  BACK | PREVT | NEXTT | FORWA |  BSPC |
// |  TAB  |  ML   |  MDW  |  MR   |  DEL  |   |  LEFT |   UP  | DOWN  | RIGTH | ENTER |
// |   `   | RCLCK | MSCUP | MSCDW |       |   | LCLCK |  ACC1 |  ACC2 |  ACC3 |       |
//                 |       |  L1   |  CMD  |   |  ALT  |   L2  |       |


// L4
// -------------------------------------------------------------------------------------
// |  ESC  | PLAY  | PREV  | NEXT  |   _   |   |   -   |   7   |   8   |   9   |  BSPC |
// |  TAB  |       | VOL-  | VOL+  |   +   |   |   =   |   4   |   5   |   6   | ENTER |
// | RESET |   *   |  BR-  |  BR+  |   .   |   |   0   |   1   |   2   |   3   |   L3  |
//                 |       |  L1   |  CMD  |   |  ALT  |   L2  |       |




// querty
// -------------------------------------------------------------------------------------
// |   Q   |   W   |   E   |   R   |   T   |   |   Y   |   U   |   I   |   O   |   P   |
// |   A   |   S   |   D   |   F   |   G   |   |   H   |   J   |   K   |   L   |   ;   |
// |   Z   |   X   |   C   |   V   |   B   |   |   N   |   M   |   ,   |   .   |   /   |
//                 |  GUI  |  LWR  |  SPC  |   |  ENT  |  RSE  |  ALT  |

// |  F1   |  F2   |  F3   |  F4   |  F5   |   |  F6   |  F7   |  F8   |  F9   |  F10  |
// |   1!  |   2@  |   3#  |   4$  |   5%  |   |   6^  |   7&  |   8*  |   9(  |   0)  |
// |   §±  | RIGHT | DOWN  |  UP   | LEFT  |   |   -_  |   =+  |   '"  |   \|  |   `~  |
//                 |  GUI  |  LWR  |  SPC  |   |  ENT  |  RSE  |  ALT  |


// colmak_dh
// -------------------------------------------------------------------------------------
// |   Q   |   W   |   F   |   P   |   B   |   |   J   |   L   |   U   |   Y   |   ;:  |
// |   A   |   R   |   S   |   T   |   G   |   |   M   |   N   |   E   |   I   |   O   |
// |   Z   |   X   |   C   |   D   |   V   |   |   K   |   H   |   ,<  |   .>  |   /?  |
//                 |  GUI  |  LWR  |  SPC  |   |  ENT  |  RSE  |  ALT  |
// Notes:
// - missing pairs: -_ =+ [{ ]} \| '" `~

// colmak_symbols
// -------------------------------------------------------------------------------------
// |   !   |   @   |   #   |   $   |   %   |   |   =   |   7   |   8   |   9   |   +   |
// |   \   |   |   |   {   |   (   |   [   |   |   *   |   4   |   5   |   6   |   -   |
// |   ^   |   &   |   }   |   )   |   ]   |   |   0   |   1   |   2   |   3   |   /   |
//                 |  GUI  |  LWR  |  SPC  |   |  ENT  |  RSE  |  ALT  |
// Notes:
// - important missing keys: _ ' " ` ~
// - repeated key: /



// miryoku
// -------------------------------------------------------------------------------------
// |   Q   |   W   |   F   |   P   |   B   |   |   J   |   L   |   U   |   Y   |   '"  |
// |   A   |   R   |   S   |   T   |   G   |   |   M   |   N   |   E   |   I   |   O   |
// |   Z   |   X   |   C   |   D   |   V   |   |   K   |   H   |   ,<  |   .>  |   /?  |
//                 |  GUI  |  LWR  |  SPC  |   |  ENT  |  RSE  |  ALT  |

// nums
// -------------------------------------------------------------------------------------
// |  [{   |   7&  |   8*  |   9(  |   ]}  |   |       |       |       |       |       |
// |   ;:  |   4$  |   5%  |   6^  |   =+  |   |       |       |       |       |       |
// |   `~  |   1!  |   2@  |   3#  |   \|  |   |       |       |       |       |       |
//                 |   .>  |   0)  |   -_  |   |       |       |       |






// nums
// -------------------------------------------------------------------------------------
// |  F1   |  F2   |  F3   |  F4   |  F5   |   |  F6   |  F7   |  F8   |  F9   |  F10  |
// |   1   |   2   |   3   |   4   |   5   |   |   6   |   7   |   8   |   9   |   0   |
// |   \   | RIGHT | DOWN  |  UP   | LEFT  |   |   -   |   +   |   [   |   ]   |   ;   |
//                 |  GUI  |  LWR  |  SPC  |   |  ENT  |  RSE  |  ALT  |

// syms
// -------------------------------------------------------------------------------------
// |   ~   |   `   | CAPS  | ALTF4 | MENU  |   | VOL-  | VOL+  | PRTSCR|  F11  |  F12  |
// |   !   |   @   |   #   |   $   |   %   |   |   ^   |   &   |   *   |   (   |   )   |
// |   |   | HOME  | PGDN  | PGUP  |  END  |   |   _   |   =   |   {   |   }   |   :   |
//                 |  GUI  |  LWR  |  SPC  |   |  ENT  |  RSE  |  ALT  |
// Note:
// - missing: PREV PLAY NEXT MUTE BR- BR+

// settings
// -------------------------------------------------------------------------------------
// |OUT_TOG|  BL   | RESET |       |       |   |       |       |       |       |       |
// |  BT1  |  BT2  |  BT3  |  BT4  |  BT5  |   |       |       |       |       |       |
// | BTCLR |       |       |       |       |   |       |       |       |       |
//                 |       |       |       |   |       |       |       |

// empty
// -------------------------------------------------------------------------------------
// |       |       |       |       |       |   |       |       |       |       |       |
// |       |       |       |       |       |   |       |       |       |       |       |
// |       |       |       |       |       |   |       |       |       |       |
//                 |       |       |       |   |       |       |       |





//
// -----------------------------------------------------------------
// |       |       |       |       |       |   | PGUP  | HOME  |  UP   |  END  |       |
// |       |       |       |       |       |   | PGDN  | LEFT  | DOWN  | RIGHT |       |
// |       |       |       |       |       |   |       |       |       |       |       |
//                 |  GUI  |  LWR  |  SPC  |   |  ENT  |  RSE  |  ALT  |


// -----------------------------------------------------------------
// |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L  |  U  |  Y  |  ;  |
// |  A  |  R  |  S  |  T  |  G  |   |  M  |  N  |  E  |  I  |  O  |
// |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H  |  ,  |  .  |  /  |
//             | GUI | LWR | SPC |   | ENT | RSE | ALT |


// -----------------------------------------------------------------
// |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L  |  U  |  Y  |  ;  |
// |  A  |  R  |  S  |  T  |  G  |   |  M  |  N  |  E  |  I  |  O  |
// |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H  |  ,  |  .  |  /  |
//             | GUI | LWR | SPC |   | ENT | RSE | ALT |








//
//		// #  =+ -_ '" \| `~ * ^ &
//		// -------------------------------------------------------------------------------------
//		// |   !   |   @   |   #   |   $   |   %   |   |   ^   |   &   |   *   |   ;   |       |
//		// |       |   =   |   `   |   '   |   :   |   |   \   |   {   |   }   |   |   |       |
//		// |   ~   |       |       |   "   |       |   |   [   |   (   |   )   |   ]   |  L3   |
//		//                 |  BSPC |  L1   | SHIFT |   |  ALT  |  L4   | ENTER |
//		symbol_layer {
//			bindings = <
//				&kp LS(N1)  &kp LS(N2)  &kp LS(N3)   &kp LS(N4)   &kp LS(N5)   &kp LS(N6) &kp LS(N7)   &kp LS(N8)   &none       &none
//				&none       &kp EQUAL   &kp GRAVE    &kp SQT      &kp COLON    &kp BSLH   &kp LBKT     &kp PIPE     &rhm RALT I &none
//				&kp TILDE   &none       &none        &kp DQT      &none        &kp LBKT   &kp LPAR     &kp RPAR     &kp RBKT    &none
//				                        &kp TAB      &kp TAB      &kp BSPC     &kp SPACE  &kp ENTER    &to NUMBER
//			>;
//		};
//
//		// -------------------------------------------------------------------------------------
//		// |   !   |   @   |   #   |   $   |   %   |   |   /   |   7   |   8   |   9   |   -   |
//		// |   \   |   |   |   {   |   (   |   [   |   |   *   |   4   |   5   |   6   |   +   |
//		// |   ^   |   &   |   }   |   )   |   ]   |   |   0   |   1   |   2   |   3   |   =   |
//		//                 |  BSPC |  L1   | SHIFT |   |  ALT  |  L4   | ENTER |
//		// -------------------------------------------------------------------------------------
//		// |  ESC  | PLAY  | PREV  | NEXT  |   _   |   |   /   |   7   |   8   |   9   |   -   |
//		// |  TAB  |       | VOL-  | VOL+  |   +   |   |   *   |   4   |   5   |   6   |   +   |
//		// |       |   *   |  BR-  |  BR+  |   .   |   |   0   |   1   |   2   |   3   |   =   |
//		//                 |  BSPC |  L1   |  CMD  |   |  ALT  |   L2  | ENTER |
//		number_layer {
//			bindings = <
//				&none     &kp C_PP  &kp C_NEXT   &kp C_PREV   &none        &kp SLASH &kp N7    &kp N8    &kp N9    &kp MINUS
//			    &none     &none     &kp C_VOL_UP &kp C_VOL_DN &none        &kp STAR  &kp N4    &kp N5    &kp N6    &kp PLUS
//			    &none     &none     &kp C_BRI_UP &kp C_BRI_DN &none        &kp N0    &kp N1    &kp N2    &kp N3    &kp EQUAL
//			                        &none        &none        &none        &none     &none     &to NAV
//			>;
//		};
//
//
//
//		// -----------------------------------------------------------------
//		// |       |       |       |       |       |   | HOME  | PGUP  |  UP   | PGDN  |       |
//		// |       |       |       |       |       |   |  END  | LEFT  | DOWN  | RIGHT |       |
//		// |       |       |       |       |       |   |       |       |       |       |       |
//		//                 |  GUI  |  LWR  |  SPC  |   |  ENT  |  RSE  |  ALT  |
//		navigation_layer {
//			bindings = <
//				&none     &none     &none     &none     &none        &kp HOME  &kp PG_UP &kp UP    &kp PG_DN &none
//			    &none     &none     &none     &none     &none        &kp END   &kp LEFT  &kp DOWN  &kp RIGHT &none
//			    &none     &none     &none     &none     &none        &none     &none     &none     &none     &none
//			                        &none     &none     &none        &none     &none     &to SET
//		>;
//		};
//
//		// -------------------------------------------------------------------------------------
//		// |OUT_TOG|OUT_BLE|OUT_USB|  BL   | RESET |   |       |       |       |       |       |
//		// |  BT1  |  BT2  |  BT3  |  BT4  |  BT5  |   |       |       |       |       |       |
//		// | BTCLR | K_PWR |       |       |       |   |       |       |       |       |
//		//                 |       |       |       |   |       |       |       |
//		setting_layer {
//			bindings = <
//				&out OUT_TOG &out OUT_BLE &out OUT_USB &bootloader  &reset          &none        &none        &none        &none        &none
//			    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    &none        &none        &none        &none        &none
//			    &bt BT_CLR   &kp K_PWR    &none        &none        &none           &none        &none        &none        &none        &none
//			                              &none        &none        &none           &none        &none        &to BASE
//		>;
//		};


