#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


#include <dt-bindings/zmk/mouse.h>

#define BASE     0
#define SYM      1
#define NUM      2
#define NAV      3
#define SET      4


#define M_UP MOVE_VERT(-1200)
#define M_DN MOVE_VERT(1200)
#define M_LT MOVE_HOR(-1200)
#define M_RT MOVE_HOR(1200)


// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt {
    quick_tap_ms = <200>;
};

// &mt {
//     tapping-term-ms = <400>;
// };

&sk {
    release-after-ms = <2000>;
    quick-release;
};

&sl {
    release-after-ms = <2000>;
};

&mmv {
    delay-ms = <0>;
    time-to-max-speed-ms = <0>;
    // acceleration-exponent=<1>;
};

/ {
    behaviors {
        tdl: tap_dance_layers {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_LAYERS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sl SYM>, <&to NUM>, <&to NAV>;
        };

        ht: hold_for_cmd {
            compatible = "zmk,behavior-hold-tap";
            label = "hold_for_cmd";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";


        // This is a simple colemak dh layout
        // -------------------------------------------------------------------------------------
        // |   Q   |   W   |   F   |   P   |   B   |   |   J   |   L   |   U   |   Y   |   ;:  |
        // |   A   |   R   |   S   |   T   |   G   |   |   M   |   N   |   E   |   I   |   O   |
        // |   Z   |   X   |   C   |   D   |   V   |   |   K   |   H   |   ,<  |   .>  |   /?  |
        //                 |       |  TAB  |  SPC  |   |  BSPC |  ENT  |  SYM  |
        // base_layer {
        //     bindings = <
        //         &kp Q               &kp W               &kp F               &kp P               &kp B                   &kp J               &kp L               &kp U               &kp Y               &kp SEMI
        //         &kp A               &kp R               &kp S               &kp T               &kp G                   &kp M               &kp N               &kp E               &kp I               &kp O
        //         &kp Z               &kp X               &kp C               &kp D               &kp V                   &kp K               &kp H               &kp COMMA           &kp DOT             &kp SLASH
        //                                                 &sk LCTRL           &mo NAV             &sk LSHIFT              &ht LG(SPACE) SPACE &tdl                &sk LALT
        //     >;
        // };

        // -------------------------------------------------------------------------------------
        // |   Q   |   W   |   E   |   R   |   T   |   |   Y   |   U   |   I   |   O   |   P   |
        // |   A   |   S   |   D   |   F   |   G   |   |   H   |   J   |   K   |   L   |   ;:  |
        // |   Z   |   X   |   C   |   V   |   B   |   |   N   |   M   |   ,<  |   . > |   /?  |
        //                 | CTRL  | (NAV) | SHIFT |   | SPACE |  SYM  |  ALT  |
        base_layer {
            bindings = <
                &ht LG(Q) Q         &ht LG(W) W         &ht LG(E) E         &ht LG(R) R         &ht LG(T) T             &ht LG(Y) Y         &ht LG(U) U         &ht LG(I) I         &ht LG(O) O         &ht LG(P) P
                &ht LG(A) A         &ht LG(S) S         &ht LG(D) D         &ht LG(F) F         &ht LG(G) G             &ht LG(H) H         &ht LG(J) J         &ht LG(K) K         &ht LG(L) L         &ht LG(SEMI) SEMI
                &ht LG(Z) Z         &ht LG(X) X         &ht LG(C) C         &ht LG(V) V         &ht LG(B) B             &ht LG(N) N         &ht LG(M) M         &ht LG(COMMA) COMMA &ht LG(DOT) DOT     &ht LG(SLASH) SLASH
                                                        &sk LCTRL           &mo NAV             &sk LSHIFT              &ht LG(SPACE) SPACE &tdl                &sk LALT
            >;
        };

        // -------------------------------------------------------------------------------------
        // |  ESC  |   @   |   #   |   $   |   %   |   |   ^   |   &   |   *   |   !   | BSPC  |
        // |  TAB  |   =   |   _   |   '   |   :   |   |   \   |   (   |   )   |   |   | ENTER |
        // |   `   |   +   |   -   |   "   |   ~   |   |   {   |   [   |   ]   |   }   |       |
        //                 | CTRL  | BASE  |  CMD  |   | SPACE |  NUM  |  ALT  |
        symbol_layer {
            bindings = <
                &kp ESC             &ht LG(AT) AT       &ht LG(HASH) HASH   &ht LG(DLLR) DLLR   &ht LG(PRCNT) PRCNT     &ht LG(CARET) CARET &ht LG(AMPS) AMPS   &ht LG(STAR) STAR   &ht LG(EXCL) EXCL   &ht LG(BSPC) BSPC
                &kp TAB             &ht LG(EQUAL) EQUAL &ht LG(UNDER) UNDER &ht LG(SQT) SQT     &ht LG(COLON) COLON     &ht LG(BSLH) BSLH   &ht LG(LPAR) LPAR   &ht LG(RPAR) RPAR   &ht LG(PIPE) PIPE   &ht LG(ENTER) ENTER
                &ht LG(GRAVE) GRAVE &ht LG(PLUS) PLUS   &ht LG(MINUS) MINUS &ht LG(DQT) DQT     &ht LG(TILDE) TILDE     &ht LG(LBRC) LBRC   &ht LG(LBKT) LBKT   &ht LG(RBKT) RBKT   &ht LG(RBRC) RBRC   &none
                                                        &sk LCTRL           &to BASE            &sk LSHIFT              &sk LCMD            &tdl                &sk LALT
            >;
        };

        // -------------------------------------------------------------------------------------
        // |  ESC  |       | BR-   |  BR+  |   _   |   |   -   |   7   |   8   |   9   |   /   |
        // |  TAB  |       | VOL-  | VOL+  |   +   |   |   =   |   4   |   5   |   6   |   *   |
        // |   `   | PREV  | PLAY  | NEXT  |   .   |   |   0   |   1   |   2   |   3   |       |
        //                 | CTRL  | BASE  | SHIFT |   | SPACE |       |  ALT  |
        number_layer {
            bindings = <
                &kp ESC             &none               &kp C_BRI_DN        &kp C_BRI_UP        &kp UNDER               &kp MINUS           &kp N7              &kp N8              &kp N9              &kp SLASH
                &kp TAB             &none               &kp C_VOL_DN        &kp C_VOL_UP        &kp PLUS                &kp EQUAL           &kp N4              &kp N5              &kp N6              &kp STAR
                &kp GRAVE           &kp C_PREV          &kp C_PP            &kp C_NEXT          &kp DOT                 &kp N0              &kp N1              &kp N2              &kp N3              &none
                                                        &sk LCTRL           &to BASE            &sk LSHIFT              &sk LCMD            &tdl                &sk LALT
            >;
        };

        // -------------------------------------------------------------------------------------
        // |  ESC  |       |  MUP  |       |  CUT  |   | HOME  | PGUP  |  UP   | PGDN  | BSPC  |
        // |  TAB  |  MLT  |  MDN  |  MRT  | COPY  |   |  END  | LEFT  | DOWN  | RIGHT | ENTER |
        // |   `   | RCLK  | MCLK  | LCLK  | PASTE |   | LCLK  | BACK  |       |  FWD  |       |
        //                 | CTRL  | BASE  | SHIFT |   | SPACE |       |  ALT  |
        navigation_layer {
            bindings = <
                &ht LG(ESC) ESC     &none               &mmv M_UP           &none               &kp LG(X)               &kp HOME            &kp PG_UP           &kp UP              &kp PG_DN           &kp BSPC
                &ht LG(TAB) TAB     &mmv M_LT           &mmv M_DN           &mmv M_RT           &kp LG(C)               &kp END             &kp LEFT            &kp DOWN            &kp RIGHT           &kp ENTER
                &ht LG(GRAVE) GRAVE &mkp RCLK           &mkp MCLK           &mkp LCLK           &kp LG(V)               &mkp LCLK           &kp LG(LA(LEFT))    &none               &kp LG(LA(RIGHT))   &none
                                                        &sk LCTRL           &to BASE            &sk LSHIFT              &sk LCMD            &tdl                &sk LALT
            >;
        };

        // -------------------------------------------------------------------------------------
        // |OUT_BLE|OUT_USB|       |       | BTCLR |   |       |  F7   |  F8   |  F9   |  F12  |
        // |  BT1  |  BT2  |  BT3  |  BT4  |       |   |       |  F4   |  F5   |  F6   |  F11  |
        // |       |       |       |       |       |   |       |  F1   |  F2   |  F3   |  F10  |
        //                 | CTRL  | BASE  | SHIFT |   | SPACE |       |  ALT  |
        setting_layer {
            bindings = <
                &out OUT_BLE        &out OUT_USB        &none               &none               &bt BT_CLR              &none               &kp F7              &kp F8              &kp F9              &kp F12
                &bt BT_SEL 0        &bt BT_SEL 1        &bt BT_SEL 2        &bt BT_SEL 3        &none                   &none               &kp F4              &kp F5              &kp F6              &kp F11
                &none               &none               &none               &none               &none                   &none               &kp F1              &kp F2              &kp F3              &kp F10
                                                        &sk LCTRL           &to BASE            &sk LSHIFT              &sk LCMD            &none               &sk LALT
            >;
        };
    };
};

// http://xahlee.info/comp/computer_language_char_distribution.html
// https://github.com/manna-harbour/miryoku_zmk
// https://github.com/weteor/3W6/tree/main/dev/keymap
// https://www.youtube.com/watch?v=S0bBmcoVsm8
// https://configure.zsa.io/moonlander/layouts/daEvx/v96pr/0
// https://configure.zsa.io/moonlander/layouts/xKZ0K/latest/2

// Ben Vallack
// L1
// -------------------------------------------------------------------------------------
// |   Q   |   W   |   F   |   P   |   B   |   |   J   |   L   |   U   |   Y   |   ;   |
// |   A   |   R   |   S   |   T   |   G   |   |   M   |   N   |   E   |   I   |   O   |
// |   Z   |   X   |   C   |   D   |   V   |   |   K   |   H   |   ,   |   .   |   /   |
//                 |       | SPACE | SHIFT |   | CTRL  |   L2  |       |

// L2
// -------------------------------------------------------------------------------------
// |  ESC  |   @   |   #   |   $   |   %   |   |   ^   |   &   |   *   |   ;   |  BSPC |
// |  TAB  |   =   |       |   '   |       |   |   \   |   {   |   }   |   |   | ENTER |
// |   ~   |   £   |       |   "   |       |   |   [   |   (   |   )   |   ]   |  L3   |
//                 |       |   L1  | SHIFT |   |  ALT  |  L4   |       |

// L3
// -------------------------------------------------------------------------------------
// |  ESC  | MSCR  |  MUP  | MSCL  |   Q   |   |  BACK | PREVT | NEXTT | FORWA |  BSPC |
// |  TAB  |  ML   |  MDW  |  MR   |  DEL  |   |  LEFT |   UP  | DOWN  | RIGTH | ENTER |
// |   `   | RCLCK | MSCUP | MSCDW |       |   | LCLCK |  ACC1 |  ACC2 |  ACC3 |       |
//                 |       |  L1   |  CMD  |   |  ALT  |   L2  |       |


// L4
// -------------------------------------------------------------------------------------
// |  ESC  | PLAY  | PREV  | NEXT  |   _   |   |   -   |   7   |   8   |   9   |  BSPC |
// |  TAB  |       | VOL-  | VOL+  |   +   |   |   =   |   4   |   5   |   6   | ENTER |
// | RESET |   *   |  BR-  |  BR+  |   .   |   |   0   |   1   |   2   |   3   |   L3  |
//                 |       |  L1   |  CMD  |   |  ALT  |   L2  |       |


// querty
// -------------------------------------------------------------------------------------
// |   Q   |   W   |   E   |   R   |   T   |   |   Y   |   U   |   I   |   O   |   P   |
// |   A   |   S   |   D   |   F   |   G   |   |   H   |   J   |   K   |   L   |   ;   |
// |   Z   |   X   |   C   |   V   |   B   |   |   N   |   M   |   ,   |   .   |   /   |
//                 |       |       |       |   |       |       |       |

// colmak_dh
// -------------------------------------------------------------------------------------
// |   Q   |   W   |   F   |   P   |   B   |   |   J   |   L   |   U   |   Y   |   ;:  |
// |   A   |   R   |   S   |   T   |   G   |   |   M   |   N   |   E   |   I   |   O   |
// |   Z   |   X   |   C   |   D   |   V   |   |   K   |   H   |   ,<  |   .>  |   /?  |
//                 |       |       |       |   |       |       |       |

// colmak_symbols
// -------------------------------------------------------------------------------------
// |   !   |   @   |   #   |   $   |   %   |   |   =   |   7   |   8   |   9   |   +   |
// |   \   |   |   |   {   |   (   |   [   |   |   *   |   4   |   5   |   6   |   -   |
// |   ^   |   &   |   }   |   )   |   ]   |   |   0   |   1   |   2   |   3   |   /   |
//                 |       |       |       |   |       |       |       |

// nums
// |  F1   |  F2   |  F3   |  F4   |  F5   |   |  F6   |  F7   |  F8   |  F9   |  F10  |
// |   1!  |   2@  |   3#  |   4$  |   5%  |   |   6^  |   7&  |   8*  |   9(  |   0)  |
// |   §±  | RIGHT | DOWN  |  UP   | LEFT  |   |   -_  |   =+  |   '"  |   \|  |   `~  |
//                 |       |       |       |   |       |       |       |

// nums
// -------------------------------------------------------------------------------------
// |  F1   |  F2   |  F3   |  F4   |  F5   |   |  F6   |  F7   |  F8   |  F9   |  F10  |
// |   1   |   2   |   3   |   4   |   5   |   |   6   |   7   |   8   |   9   |   0   |
// |   \   | RIGHT | DOWN  |  UP   | LEFT  |   |   -   |   +   |   [   |   ]   |   ;   |
//                 |       |       |       |   |       |       |       |

// syms
// -------------------------------------------------------------------------------------
// |   ~   |   `   | CAPS  | ALTF4 | MENU  |   | VOL-  | VOL+  | PRTSCR|  F11  |  F12  |
// |   !   |   @   |   #   |   $   |   %   |   |   ^   |   &   |   *   |   (   |   )   |
// |   |   | HOME  | PGDN  | PGUP  |  END  |   |   _   |   =   |   {   |   }   |   :   |
//                 |       |       |       |   |       |       |       |


// -------------------------------------------------------------------------------------
// |  ESC  | PLAY  | PREV  | NEXT  |   _   |   |   /   |   7   |   8   |   9   |   -   |
// |  TAB  |       | VOL-  | VOL+  |   +   |   |   *   |   4   |   5   |   6   |   +   |
// |       |   *   |  BR-  |  BR+  |   .   |   |   0   |   1   |   2   |   3   |   =   |
//                 |       |       |       |   |       |       |       |