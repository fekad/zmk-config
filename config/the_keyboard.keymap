#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE   0
#define EXTRA  1
#define TAP    2
#define BUTTON 3
#define NAV    4
#define MOUSE  5
#define MEDIA  6
#define NUM    7
#define SYM    8
#define FUN    9
#define U_MOUSE_MOVE_MAX 1250
#define U_MOUSE_MOVE_EXPONENT 1
#define U_MOUSE_MOVE_TIME 1500
#define U_MOUSE_MOVE_DELAY 0
#define U_MOUSE_SCROLL_MAX 100
#define U_MOUSE_SCROLL_EXPONENT 1
#define U_MOUSE_SCROLL_TIME 5000
#define U_MOUSE_SCROLL_DELAY 0

&mmv {
    acceleration-exponent = <U_MOUSE_MOVE_EXPONENT>;
    time-to-max-speed-ms = <U_MOUSE_MOVE_TIME>;
    delay-ms = <U_MOUSE_MOVE_DELAY>;
};

/*
&mwh {
  acceleration-exponent = <U_MOUSE_SCROLL_EXPONENT>;
  time-to-max-speed-ms = <U_MOUSE_SCROLL_TIME>;
  delay-ms = <U_MOUSE_SCROLL_DELAY>;
};
*/

#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT
#undef SCROLL_UP
#undef SCROLL_DOWN
#undef SCROLL_LEFT
#undef SCROLL_RIGHT

#define MOVE_UP MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_VERT(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_HOR(U_MOUSE_MOVE_MAX)
#define SCROLL_UP SCROLL_VERT(U_MOUSE_SCROLL_MAX)
#define SCROLL_DOWN SCROLL_VERT(-U_MOUSE_SCROLL_MAX)
#define SCROLL_LEFT SCROLL_HOR(-U_MOUSE_SCROLL_MAX)
#define SCROLL_RIGHT SCROLL_HOR(U_MOUSE_SCROLL_MAX)

/ {
    behaviors {
        u_lt: u_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "u_lt";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        u_bt_sel_0: u_bt_sel_0 {
            compatible = "zmk,behavior-mod-morph";
            label = "u_bt_sel_0";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0>, <&bt BT_SEL 0 &bt BT_CLR>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_bt_sel_1: u_bt_sel_1 {
            compatible = "zmk,behavior-mod-morph";
            label = "u_bt_sel_1";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1>, <&bt BT_SEL 1 &bt BT_CLR>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_bt_sel_2: u_bt_sel_2 {
            compatible = "zmk,behavior-mod-morph";
            label = "u_bt_sel_2";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 2>, <&bt BT_SEL 2 &bt BT_CLR>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_bt_sel_3: u_bt_sel_3 {
            compatible = "zmk,behavior-mod-morph";
            label = "u_bt_sel_3";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 3>, <&bt BT_SEL 3 &bt BT_CLR>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_bt_sel_4: u_bt_sel_4 {
            compatible = "zmk,behavior-mod-morph";
            label = "u_bt_sel_4";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 4>, <&bt BT_SEL 4 &bt BT_CLR>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_out_tog: u_out_tog {
            compatible = "zmk,behavior-mod-morph";
            label = "u_out_tog";
            #binding-cells = <0>;
            bindings = <&out OUT_TOG>, <&out OUT_USB>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_caps_word: u_caps_word {
            compatible = "zmk,behavior-mod-morph";
            label = "u_caps_word";
            #binding-cells = <0>;
            bindings = <&caps_word>, <&kp CAPS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        u_to_BASE: u_to_BASE {
            compatible = "zmk,behavior-tap-dance";
            label = "u_to_BASE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 0>;
        };

        u_to_EXTRA: u_to_EXTRA {
            compatible = "zmk,behavior-tap-dance";
            label = "u_to_EXTRA";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 1>;
        };

        u_to_TAP: u_to_TAP {
            compatible = "zmk,behavior-tap-dance";
            label = "u_to_TAP";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 2>;
        };

        u_to_BUTTON: u_to_BUTTON {
            compatible = "zmk,behavior-tap-dance";
            label = "u_to_BUTTON";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 3>;
        };

        u_to_NAV: u_to_NAV {
            compatible = "zmk,behavior-tap-dance";
            label = "u_to_NAV";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 4>;
        };

        u_to_MOUSE: u_to_MOUSE {
            compatible = "zmk,behavior-tap-dance";
            label = "u_to_MOUSE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 5>;
        };

        u_to_MEDIA: u_to_MEDIA {
            compatible = "zmk,behavior-tap-dance";
            label = "u_to_MEDIA";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 6>;
        };

        u_to_NUM: u_to_NUM {
            compatible = "zmk,behavior-tap-dance";
            label = "u_to_NUM";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 7>;
        };

        u_to_SYM: u_to_SYM {
            compatible = "zmk,behavior-tap-dance";
            label = "u_to_SYM";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 8>;
        };

        u_to_FUN: u_to_FUN {
            compatible = "zmk,behavior-tap-dance";
            label = "u_to_FUN";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&to 9>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            #binding-cells = <2>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            #binding-cells = <2>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp Q          &kp W         &kp F        &kp P        &kp B          &kp J          &kp L         &kp U        &kp Y         &kp SQT
&hml LSHIFT A  &hml LCTRL R  &hml LALT S  &hml LGUI T  &kp G          &kp M          &hmr LGUI N   &hmr LALT E  &hmr LCTRL I  &hmr LSHFT O
&kp Z          &kp X         &kp C        &kp D        &kp V          &kp K          &kp H         &kp COMMA    &kp DOT       &kp SLASH
                             &u_lt 6 ESC  &u_lt 4 RET  &u_lt 5 TAB    &u_lt 8 SPACE  &u_lt 7 BSPC  &u_lt 9 DEL
            >;
        };

        qwerty {
            bindings = <
&kp Q         &kp W         &kp E        &kp R        &kp T          &kp Y          &kp U         &kp I        &kp O         &kp P
&hml LSHFT A  &hml LCTRL S  &hml LALT D  &hml LGUI F  &kp G          &kp H          &hmr LGUI J   &hmr LALT K  &hmr LCTRL L  &hmr LSHFT SQT
&kp Z         &kp X         &kp C        &kp V        &kp B          &kp N          &kp M         &kp COMMA    &kp DOT       &kp SLASH
                            &u_lt 6 ESC  &u_lt 4 RET  &u_lt 5 TAB    &u_lt 8 SPACE  &u_lt 7 BSPC  &u_lt 9 DEL
            >;
        };

        tap {
            bindings = <
&kp Q  &kp W  &kp F    &kp P    &kp B      &kp J      &kp L     &kp U      &kp Y    &kp SQT
&kp A  &kp R  &kp S    &kp T    &kp G      &kp M      &kp N     &kp E      &kp I    &kp O
&kp Z  &kp X  &kp C    &kp D    &kp V      &kp K      &kp H     &kp COMMA  &kp DOT  &kp SLASH
              &kp ESC  &kp RET  &kp TAB    &kp SPACE  &kp BSPC  &kp DEL
            >;
        };

        button {
            bindings = <
&kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LS(LG(Z))    &kp LS(LG(Z))  &kp LG(V)  &kp LG(C)  &kp LG(X)  &kp LG(Z)
&kp LSHFT  &kp LCTRL  &kp LALT   &kp LGUI   &none            &none          &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT
&kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LS(LG(Z))    &kp LS(LG(Z))  &kp LG(V)  &kp LG(C)  &kp LG(X)  &kp LG(Z)
                      &mkp MB3   &mkp MB1   &mkp MB2         &mkp MB2       &mkp MB1   &mkp MB3
            >;
        };

        nav {
            bindings = <
&none      &u_to_TAP  &u_to_EXTRA  &u_to_BASE  &none    &kp HOME       &kp PG_UP  &kp UP     &kp PG_DN  &none
&kp LSHFT  &kp LCTRL  &kp LALT     &kp LGUI    &none    &kp END        &kp LEFT   &kp DOWN   &kp RIGHT  &u_caps_word
&none      &kp RALT   &u_to_NUM    &u_to_NAV   &none    &kp LS(LG(Z))  &kp LG(V)  &kp LG(C)  &kp LG(X)  &kp LG(Z)
                      &none        &none       &none    &kp SPACE      &kp BSPC   &kp DEL
            >;
        };

        mouse {
            bindings = <
&none      &u_to_TAP  &u_to_EXTRA  &u_to_BASE   &none    &mwh SCROLL_LEFT   &mwh SCROLL_UP  &mmv MOVE_UP    &mwh SCROLL_DOWN  &none
&kp LSHFT  &kp LCTRL  &kp LALT     &kp LGUI     &none    &mwh SCROLL_RIGHT  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT   &none
&none      &kp RALT   &u_to_SYM    &u_to_MOUSE  &none    &kp LS(LG(Z))      &kp LG(V)       &kp LG(C)       &kp LG(X)         &kp LG(Z)
                      &none        &none        &none    &mkp MB2           &mkp MB1        &mkp MB3
            >;
        };

        media {
            bindings = <
&none      &u_to_TAP  &u_to_EXTRA  &u_to_BASE   &none    &kp C_BRI_UP  &none        &kp C_VOL_UP  &none        &none
&kp LSHFT  &kp LCTRL  &kp LALT     &kp LGUI     &none    &kp C_BRI_DN  &kp C_PREV   &kp C_VOL_DN  &kp C_NEXT   &none
&none      &kp RALT   &u_to_FUN    &u_to_MEDIA  &none    &u_out_tog    &u_bt_sel_0  &u_bt_sel_1   &u_bt_sel_2  &u_bt_sel_3
                      &none        &none        &none    &kp C_PP      &kp C_STOP   &kp C_MUTE
            >;
        };

        number {
            bindings = <
&kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT     &none  &u_to_BASE  &u_to_EXTRA  &u_to_TAP  &none
&kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL    &none  &kp LGUI    &kp LALT     &kp LCTRL  &kp LSHFT
&kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH     &none  &u_to_NUM   &u_to_NAV    &kp RALT   &none
                   &kp DOT  &kp N0  &kp MINUS    &none  &none       &none
            >;
        };

        symbol {
            bindings = <
&kp GRAVE  &kp SEMICOLON  &kp HASH   &kp GT     &kp LT           &none  &u_to_BASE  &u_to_EXTRA  &u_to_TAP  &none
&kp LBRC   &kp LBKT       &kp LPAR   &kp COLON  &kp BACKSLASH    &none  &kp LGUI    &kp LALT     &kp LCTRL  &kp LSHFT
&kp CARET  &kp SLASH      &kp ASTRK  &kp MINUS  &kp PLUS         &none  &u_to_SYM   &u_to_MOUSE  &kp RALT   &none
                          &none      &kp EQUAL  &kp UNDER        &none  &none       &none
            >;
        };

        fun {
            bindings = <
&kp F12  &kp F7  &kp F8     &kp F9   &kp PSCRN          &none  &u_to_BASE  &u_to_EXTRA  &u_to_TAP  &none
&kp F11  &kp F4  &kp F5     &kp F6   &kp SLCK           &none  &kp LGUI    &kp LALT     &kp LCTRL  &kp LSHFT
&kp F10  &kp F1  &kp F2     &kp F3   &kp PAUSE_BREAK    &none  &u_to_FUN   &u_to_MEDIA  &kp RALT   &none
                 &kp K_APP  &kp RET  &kp TAB            &none  &none       &none
            >;
        };
    };
};

/*
        // -------------------------------------------------------------------------------------
        // |   Q   |   W   |   F   |   P   |   B   |   |   J   |   L   |   U   |   Y   |   ;:  |
        // |   A   |   R   |   S   |   T   |   G   |   |   M   |   N   |   E   |   I   |   O   |
        // |   Z   |   X   |   C   |   D   |   V   |   |   K   |   H   |   ,<  |   .>  |   /?  |
        //                 |       |  TAB  |  SPC  |   |  BSPC |  ENT  |  SYM  |
        
        // -------------------------------------------------------------------------------------
        // |   Q   |   W   |   E   |   R   |   T   |   |   Y   |   U   |   I   |   O   |   P   |
        // |   A   |   S   |   D   |   F   |   G   |   |   H   |   J   |   K   |   L   |   ;:  |
        // |   Z   |   X   |   C   |   V   |   B   |   |   N   |   M   |   ,<  |   . > |   /?  |
        //                 | CTRL  | (NAV) | SHIFT |   | SPACE |  SYM  |  ALT  |
        
        // -------------------------------------------------------------------------------------
        // |  ESC  |   @   |   #   |   $   |   %   |   |   ^   |   &   |   *   |   !   | BSPC  |
        // |  TAB  |   =   |   _   |   '   |   :   |   |   \   |   (   |   )   |   |   | ENTER |
        // |   `   |   +   |   -   |   "   |   ~   |   |   {   |   [   |   ]   |   }   |       |
        //                 | CTRL  | BASE  |  CMD  |   | SPACE |  NUM  |  ALT  |

        // -------------------------------------------------------------------------------------
        // |  ESC  |       | BR-   |  BR+  |   _   |   |   -   |   7   |   8   |   9   |   /   |
        // |  TAB  |       | VOL-  | VOL+  |   +   |   |   =   |   4   |   5   |   6   |   *   |
        // |   `   | PREV  | PLAY  | NEXT  |   .   |   |   0   |   1   |   2   |   3   |       |
        //                 | CTRL  | BASE  | SHIFT |   | SPACE |       |  ALT  |

*/
